1+2
1+2
install.packages('tidyverse')
0
library(tidyverse)
data.frame(name=c('Ann', 'Bob'), number=c(3.141, 2.718)) %>% gather(type, favorite, -name)
data.frame(x=rnorm(1000), y=rnorm(1000)) %>% ggplot(aes(x,y)) + geom_point()
install.packages(c("tidyverse", "shiny", "leaflet", "DT"))
library(shiny)
library(DT)
library(tidyverse)
library(leaflet)
runApp('dummy_app')
install.packages("survivoR")
library(survivoR)
vh <- vote_history %>%
filter(
season == 40,
episode == 10
)
vh <- vote_history %>%
filter(
season == 40,
episode == 10
)
vh <- vote_history
filter(
season == 40,
episode == 10
)
vh
View(vh)
summary(vh)
table(vh$immunity)
table(vh$vote)
install.packages(c("tidyverse", "shiny", "leaflet", "DT"))
library(shiny)
library(DT)
library(tidyverse)
library(leaflet)
library(lubridate)
library(dplyr)
library(network)
vh <- vote_history %>%
filter(
season == 40,
episode == 10
)
View(vh)
vh <- vote_history
vh2 <- vote_history %>%
filter(
season == 40,
episode == 10
)
View(vh2)
View(vh2)
vh2 <- vote_history %>%
tabyl(vote)
library(janitor)
install.packages("janitor")
library(janitor)
vh2 <- vote_history %>%
tabyl(vote)
View(vh2)
vh2 <- vote_history %>%
tabyl(season,vote)
View(vh2)
vh31 <- vote_history %>%
filter(
season == 31,
episode == 10
)
vh23 <- vote_history %>%
filter(
season == 23,
episode == 10
)
View(vh23)
vh31 <- vote_history %>%
filter(
season == 31
)
vh23 <- vote_history %>%
filter(
season == 23
)
distinct(vh23, castaway)
castaways31 <- distinct(vh31, castaway)
castaways23 <- distinct(vh23, castaway)
View(vh31)
View(castaways31)
vh4 <- vote_history %>%
filter(
season == 4
)
castaways4 <- distinct(vh4, castaway)
singep <- vote_history %>%
filter(
season == 31, episode == 1
)
View(singep)
inner_join(singep, singep, by = NULL, copy = FALSE)
tets <- inner_join(singep, singep, by = NULL, copy = FALSE)
View(tets)
tets <- inner_join(singep, singep, by = c(singep.episode=singep.episode), copy = FALSE)
View(singep)
tets <- inner_join(singep, singep, by = c("episode"="episode"), copy = FALSE)
View(tets)
episodes4 <- distinct(vh4, episode)
episodes31 <- distinct(vh31, episode)
View(episodes4)
#Get episode lists
episodes4 <- distinct(vh4, season, episode)
View(castaways4)
View(episodes4)
#Get episode lists
episodes4 <- distinct(vh4, season, episode)
episodes31 <- distinct(vh31, season, episode)
#All combos
cross_join(episodes4, castaways4)
#All combos
outer_join(episodes4, castaways4)
#All combos
inner_join(episodes4, castaways4)
#All combos
inner_join(episodes4, castaways4, by=NULL)
#All combos
inner_join(episodes4, castaways4, by=character())
allcombos31 <- inner_join(episodes31, castaways31, by=character())
allcombos31 <- inner_join(episodes31, castaways31, by=character())
tets <- inner_join(allcombos4, singep, by = NULL, copy = FALSE)
#All combos
allcombos4 <- inner_join(episodes4, castaways4, by=character())
tets <- inner_join(allcombos4, singep, by = NULL, copy = FALSE)
tets <- inner_join(allcombos31, singep, by = NULL, copy = FALSE)
View(tets)
tets <- left_join(allcombos31, singep, by = NULL, copy = FALSE)
bothvotes <- left_join(firstvote, singep, by = c("season"="season", "episode"="episode"), copy = FALSE)
firstvote <- left_join(allcombos31, singep, by = NULL, copy = FALSE)
bothvotes <- left_join(firstvote, singep, by = c("season"="season", "episode"="episode"), copy = FALSE)
View(bothvotes)
bothvotes %>%
mutate(
g = ifelse(vote.x==vote.y, "Allies", "Not")
)
test <- bothvotes %>%
mutate(
g = ifelse(vote.x==vote.y, "Allies", "Not")
)
View(singep)
View(test)
adjacencymatrix_stg <- bothvotes %>%
mutate(
allies = ifelse(vote.x==vote.y, 1, 0)
)
adjacencymatrix_stg <- bothvotes %>%
mutate(
votedtogether = ifelse(vote.x==vote.y, 1, 0)
)
adjacencymatrix_stg2 <- adjacencymatrix_stg %>%
select(season, episode, castaway.x, castaway.y, votedtogether)
View(adjacencymatrix_stg2)
#Find adjacency matrix by episode
firstvote <- left_join(allcombos31, vh31, by = NULL, copy = FALSE)
bothvotes <- left_join(firstvote, vh31, by = c("season"="season", "episode"="episode"), copy = FALSE)
adjacencymatrix_stg <- bothvotes %>%
mutate(
votedtogether = ifelse(vote.x==vote.y, 1, 0)
)
adjacencymatrix_stg2 <- adjacencymatrix_stg %>%
select(season, episode, castaway.x, castaway.y, votedtogether)
View(adjacencymatrix_stg2)
View(vh31)
#Get episode lists
episodes4 <- distinct(vh4, season, episode, day)
episodes31 <- distinct(vh31, season, episode, day)
#All combos
allcombos4 <- inner_join(episodes4, castaways4, by=character())
allcombos31 <- inner_join(episodes31, castaways31, by=character())
#Find adjacency matrix by episode
firstvote <- left_join(allcombos31, vh31, by = NULL, copy = FALSE)
bothvotes <- left_join(firstvote, vh31, by = c("season"="season", "episode"="episode", "day"="day"), copy = FALSE)
adjacencymatrix_stg <- bothvotes %>%
mutate(
votedtogether = ifelse(vote.x==vote.y, 1, 0)
)
adjacencymatrix_stg2 <- adjacencymatrix_stg %>%
select(season, episode, day, castaway.x, castaway.y, votedtogether)
write.csv(adjacencymatrix_stg2, "C:\\Users\\13362\\Survivor\\adjacency31.csv"
write.csv(adjacencymatrix_stg2, "C:\\Users\\13362\\Survivor\\adjacency31.csv")
View(adjacencymatrix_stg2)
write.csv(adjacencymatrix_stg2, "C:\\Users\\13362\\Survivor\\adjacency31.csv")
bothvotes <- left_join(firstvote, firstvote, by = c("season"="season", "episode"="episode", "day"="day"), copy = FALSE)
adjacencymatrix_stg <- bothvotes %>%
mutate(
votedtogether = ifelse(vote.x==vote.y, 1, 0)
)
adjacencymatrix_stg2 <- adjacencymatrix_stg %>%
select(season, episode, day, castaway.x, castaway.y, votedtogether)
write.csv(adjacencymatrix_stg2, "C:\\Users\\13362\\Survivor\\adjacency31.csv")
View(bothvotes)
adjacencymatrix <- adjacencymatrix_stg2 %>%
replace_na(0)
adjacencymatrix <- adjacencymatrix_stg2 %>%
replace_na(votedtogether, 0)
adjacencymatrix <- adjacencymatrix_stg2 %>%
replace_na(votedtogether = 0)
adjacencymatrix <- adjacencymatrix_stg2 %>%
replace_na(list(votedtogether = 0))
View(adjacencymatrix)
write.csv(adjacencymatrix, "C:\\Users\\13362\\Survivor\\adjacency31.csv")
setwd("C:/Users/13362/repos/relaylogistics/scripts/rscripts/deliverytimeshist")
library(shiny)
library(DT)
library(tidyverse)
library(dplyr)
#---------------------------------------------------------------#
#Read in data
ptpdata <- read_csv('ex4_exp64_ptp_rundate2024-06-13_deliverytimes.csv')
relaydata <- read_csv('ex4_exp69_relay_rundate2024-06-13_deliverytimes.csv')
#---------------------------------------------------------------#
#Filter to orders completed in both runs
#---------------------------------------------------------------#
relaydata1 <- relaydata %>% select(id, order, actual)
vec1 <- rep("Actual delivery time", nrow(relaydata1))
relaydata1 <- relaydata1 %>% mutate(datalabel = vec1)
relaydata1 <- rename(relaydata1, deliverytime = actual)
relaydata2 <- relaydata %>% select(id, order, best)
vec2 <- rep("Best delivery time", nrow(relaydata2))
relaydata2 <- relaydata2 %>% mutate(datalabel = vec2)
relaydata2 <- rename(relaydata2, deliverytime = best)
relaydata <- rbind(relaydata1, relaydata2)
#---------------------------------------------------------------#
relaymeandelivtime <- relaydata %>%
group_by(datalabel) %>%
summarize(mean=mean(deliverytime))
#---------------------------------------------------------------#
update_geom_defaults("text", list(size = 24))
dev.new(width=8, height=4)
png(file="relaydelivtimes_raw.png",
width=2400, height=1800)
relaydata %>%
ggplot(aes(x=deliverytime, color=datalabel, fill=datalabel)) +
geom_density(alpha=0.3, size=3)+
geom_vline(data = relaymeandelivtime, aes(xintercept = mean,
color = datalabel), size=5)+
scale_colour_manual("", breaks = c("Actual delivery time", "Best delivery time"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Actual delivery time", "Best delivery time"),
values = c("#DA853E", "#649BCB")) +
#xlim(0, 0.00000001)+
#ylim(0, 100)+
labs(x="Delivery time (hours)", y="Density") +
scale_x_continuous(limits=c(0,150)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 70)) +
theme(axis.text = element_text(size = 60)) +
theme(axis.title = element_text(size = 75))
dev.off()
#---------------------------------------------------------------#
ptpdata <- read_csv('ex4_exp64_ptp_rundate2024-06-13_deliverytimes.csv')
ptpdata1 <- ptpdata %>% select(id, order, actual)
vec1 <- rep("Actual delivery time", nrow(ptpdata1))
ptpdata1 <- ptpdata1 %>% mutate(datalabel = vec1)
ptpdata1 <- rename(ptpdata1, deliverytime = actual)
ptpdata2 <- ptpdata %>% select(id, order, best)
vec2 <- rep("Best delivery time", nrow(ptpdata2))
ptpdata2 <- ptpdata2 %>% mutate(datalabel = vec2)
ptpdata2 <- rename(ptpdata2, deliverytime = best)
ptpdata <- rbind(ptpdata1, ptpdata2)
#---------------------------------------------------------------#
ptpmeandelivtime <- ptpdata %>%
group_by(datalabel) %>%
summarize(mean=mean(deliverytime))
ptpmeandelivtime[1,2] <- 73.8
ptpmeandelivtime[2,2] <- 41.0
#---------------------------------------------------------------#
update_geom_defaults("text", list(size = 24))
dev.new(width=8, height=4)
png(file="ptpdelivtimes_raw.png",
width=2400, height=1800)
ptpdata %>%
ggplot(aes(x=deliverytime, color=datalabel, fill=datalabel)) +
geom_density(alpha=0.3, size=3)+
geom_vline(data = ptpmeandelivtime, aes(xintercept = mean,
color = datalabel), size=5)+
scale_colour_manual("", breaks = c("Actual delivery time", "Best delivery time"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Actual delivery time", "Best delivery time"),
values = c("#DA853E", "#649BCB")) +
#xlim(0, 0.00000001)+
#ylim(0, 100)+
labs(x="Delivery time (hours)", y="Density") +
scale_x_continuous(limits=c(0,150)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 70)) +
theme(axis.text = element_text(size = 60)) +
theme(axis.title = element_text(size = 70))
dev.off()
ptpmeandelivtime <- ptpdata %>%
group_by(datalabel) %>%
summarize(mean=mean(deliverytime))
#ptpmeandelivtime[1,2] <- 73.8
#ptpmeandelivtime[2,2] <- 41.0
#---------------------------------------------------------------#
update_geom_defaults("text", list(size = 24))
dev.new(width=8, height=4)
png(file="ptpdelivtimes_raw.png",
width=2400, height=1800)
ptpdata %>%
ggplot(aes(x=deliverytime, color=datalabel, fill=datalabel)) +
geom_density(alpha=0.3, size=3)+
geom_vline(data = ptpmeandelivtime, aes(xintercept = mean,
color = datalabel), size=5)+
scale_colour_manual("", breaks = c("Actual delivery time", "Best delivery time"),
values = c("#DA853E", "#649BCB"))+
scale_fill_manual("", breaks = c("Actual delivery time", "Best delivery time"),
values = c("#DA853E", "#649BCB")) +
#xlim(0, 0.00000001)+
#ylim(0, 100)+
labs(x="Delivery time (hours)", y="Density") +
scale_x_continuous(limits=c(0,150)) +
#theme(legend.position="none") +
theme(legend.position="bottom", legend.text = element_text(size = 70)) +
theme(axis.text = element_text(size = 60)) +
theme(axis.title = element_text(size = 70))
dev.off()
ptpmeandelivtime
